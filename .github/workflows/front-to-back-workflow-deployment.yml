name: Politick 2023 CI/CD

on:
  push:
    paths: 
      - Politick.Api/**
      - Politick/**
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.x'
          include-prerelease: true

      - name: Build with dotnet
        working-directory: ./Politick.Api
        run: dotnet build --configuration Release
        
      - name: Test with dotnet
        working-directory: ./Politick.Api
        run: dotnet test

      - name: Publish Backend
        working-directory: ./Politick.Api
        run: dotnet publish Politick.Api -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Packages
        run: npm ci
        working-directory: ./Politick

      - name: Lint Code
        working-directory: ./Politick
        run: npm run lint

      - name: Prettier Check
        working-directory: ./Politick
        run: npm run format:check

      - name: Build Vue App 
        working-directory: ./Politick
        run: npm run build

      - name: Create dist Directory
        run: mkdir dist

      - name: Copy Frontend to root directory
        run: cp -R Politick/dist/* .

      - name: Archive Backend Build
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: ${{env.DOTNET_ROOT}}/myapp

      - name: Archive Frontend Build
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ((github.event_name == 'push' && github.ref == 'refs/heads/master') || github.event_name == 'workflow_dispatch' )
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download Backend artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-build

      - name: Download Frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-build

      - name: Display Artifact Contents
        run: |
          ls -R

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.APP_NAME }}
          slot-name: 'Production'
          publish-profile: ${{ secrets.PUBLISH_PROFILE }}
          package: |
            ./


